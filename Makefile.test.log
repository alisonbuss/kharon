The default values to be used by this Makefile:

    --> MAKECMDGOALS: 'make plan compile vagrant-up'
    --> WORKING_DIRECTORY: .

    --> PACKER_BUILD_PATH: ./packer-builds
    --> PACKER_MODULES_PATH: ./packer-modules
    --> PACKER_NEW_MODEL_PATH: ./packer-new-model
    --> PACKER_ONLY: virtualbox-iso

    --> NEW_MODEL_NAME: coreos-vagrant
    --> NEW_MODEL_SOURCE_FILE: ./packer-new-model/coreos-vagrant.json
    --> NEW_MODEL_BUILD_PATH: ./packer-builds/coreos-vagrant-packer
    --> NEW_MODEL_COMPILED_NAME: coreos-vagrant-template
    --> NEW_MODEL_COMPILED_PATH: ./packer-builds/coreos-vagrant-packer/packer-template
    --> NEW_MODEL_OUTPUT_FILE: ./packer-builds/coreos-vagrant-packer/packer-template/coreos-vagrant-template.json

    --> COREOS_RELEASE: alpha
    --> COREOS_VERSION: 1632.0.0

    --> IGNITION_SOURCE_FILE: ./support-files/container-linux-config/coreos-vagrant-ignition.yml
    --> IGNITION_BUILD_PATH: ./packer-builds/coreos-vagrant-packer/files/ignitions
    --> IGNITION_COMPILED_NAME: coreos-ignition

    --> CFSSL_BUILD_PATH: ./packer-builds/coreos-vagrant-packer/files/certificates

    --> COMPILE_NEW_MODEL_FOR_PACKER_CMD: ./support-files/shell-script/compile-new-model-for-packer.sh
    --> COMPILE_CONFIG_IGNITION_CMD: ./support-files/shell-script/compile-container-linux-config.sh
    --> COMPILE_CERTIFICATE_CMD: ./support-files/shell-script/compile-cfssl-certificates.sh
    --> CREATE_SHELL_SCRIPT_RUN_PACKER_CMD: ./support-files/shell-script/create-shell-script-run-packer.sh
    --> CREATE_DOCUMENTATION_PACKER_CMD: ./support-files/shell-script/create-documentation-packer.sh
    --> START_PACKER_CMD: ./packer-builds/coreos-vagrant-packer/start-packer.sh

Starting the compilation of the [coreos-vagrant] project...

Starting script execution [compile-new-model-for-packer.sh]
Creating directory for the creation of packer template...
--affected directory: './packer-builds/coreos-vagrant-packer/packer-template'
Processing and compiling the [variables] module...
--generated file: './packer-builds/coreos-vagrant-packer/packer-template/vars-custom-variables.json'
Processing and compiling the [variables list] module...
--generated file: './packer-modules/variables/vars-global.json'
--generated file: './packer-modules/variables/vars-coreos.json'
--generated file: './packer-modules/variables/vars-vagrant.json'
Processing and compiling the [builders] module...
--reading file: './packer-modules/builders/vagrant.json'
Processing and compiling the [provisioners] module...
--reading file: './packer-modules/provisioners/shell-hello-world.json'
Processing and compiling the [post processors] module...
--reading file: './packer-modules/post-processors/vagrant-box.json'
Starting the compilation of the [new model] for a Packer Template...
--affected directory: ./packer-builds/coreos-vagrant-packer/packer-template
--generated file: 'coreos-vagrant-template-min.json'
--generated file: 'coreos-vagrant-template.json'

Starting script execution [compile-cfssl-certificates.sh]

Starting script execution [compile-container-linux-config.sh]
Creating directory for the creation of ignitions...
--affected directory: './packer-builds/coreos-vagrant-packer/files/ignitions'
Starting the compilation process from "Container Linux Config" to "ignition"...
--affected platforms: ['vagrant-virtualbox' 'digitalocean' 'ec2' 'gce' 'azure' 'packet']
Converting to (no-platform)...
--generated file: './packer-builds/coreos-vagrant-packer/files/ignitions/coreos-ignition.json'
Converting to (vagrant-virtualbox)...
--generated file: './packer-builds/coreos-vagrant-packer/files/ignitions/coreos-ignition-for-virtualbox.json'
Converting to (digitalocean)...
--generated file: './packer-builds/coreos-vagrant-packer/files/ignitions/coreos-ignition-for-digitalocean.json'
Converting to (ec2)...
--generated file: './packer-builds/coreos-vagrant-packer/files/ignitions/coreos-ignition-for-ec2.json'
Converting to (gce)...
--generated file: './packer-builds/coreos-vagrant-packer/files/ignitions/coreos-ignition-for-gce.json'
Converting to (azure)...
--generated file: './packer-builds/coreos-vagrant-packer/files/ignitions/coreos-ignition-for-azure.json'
Converting to (packet)...
--generated file: './packer-builds/coreos-vagrant-packer/files/ignitions/coreos-ignition-for-packet.json'

Starting script execution [create-shell-script-run-packer.sh]
Processing the [override variables] of Makefile...
Processing the [variables list] module...
--processing variable:: './packer-modules/variables/vars-global.json'
--processing variable:: './packer-modules/variables/vars-coreos.json'
--processing variable:: './packer-modules/variables/vars-vagrant.json'
Starting the creation of the [start-packer.sh] for execution Packer CLI...
--generated file: './packer-builds/coreos-vagrant-packer/start-packer.sh'

Starting script execution [create-documentation-packer.sh]
Starting the creation of the README.md documentation file...
--generated file: './packer-builds/coreos-vagrant-packer/README.md'
Copying files from Vagrantfile...
--source: ./support-files/vagrant/Vagrantfile
--output: ./packer-builds/coreos-vagrant-packer/Vagrantfile
Copying files from vagrant-instances.json...
--source: ./support-files/vagrant/vagrant-instances.json
--output: ./packer-builds/coreos-vagrant-packer/vagrant-instances.json
Copying Vagrant SSH Private Key...
--source: ./support-files/vagrant/vagrant_insecure_private_key
--output: ./packer-builds/coreos-vagrant-packer/files/vagrant_insecure_private_key
Complete compilation!
Starting vagrant testing through a CLI UP [coreos-vagrant]...
--Vagrantfile: ./packer-builds/coreos-vagrant-packer/Vagrantfile
--CLI: 'vagrant up'
VAGRANT_CWD=./packer-builds/coreos-vagrant-packer/ vagrant up;
Bringing machine 'core01.dev.com' up with 'virtualbox' provider...
Bringing machine 'core02.dev.com' up with 'virtualbox' provider...
==> core01.dev.com: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> core01.dev.com: flag to force provisioning. Provisioners marked to run always will still run.
==> core02.dev.com: Running provisioner: shell...
    core02.dev.com: Running: inline script
    core02.dev.com: Hello, World
Completed vagrant test!
